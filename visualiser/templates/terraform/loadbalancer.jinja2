
# ------ Create Loadbalancer
resource "oci_load_balancer_load_balancer" "{{ resource_name }}" {
    # Required
    compartment_id = {{ compartment_id }}
    shape          = {{ shape | safe }}
    display_name   = {{ display_name | safe }}
    subnet_ids     = [
{% for subnet_id in loadbalancer_subnet_ids %}
                    {{ subnet_id }}{% if not loop.last %},{% endif %}
{% endfor %}
                    ]
    # Optional
    is_private     = {{ is_private | safe }}
{% if ip_mode is defined %}
    ip_mode   = {{ ip_mode | safe }}
{% endif %}
{% if network_security_group_ids is defined %}
    network_security_group_ids   = {{ network_security_group_ids }}
{% endif %}
{% if defined_tags is defined %}
    defined_tags   = {{ defined_tags | safe }}
{% endif %}
{% if freeform_tags is defined %}
    freeform_tags  = {{ freeform_tags | safe }}
{% endif %}
}

locals {
    {{ resource_name }}_id            = oci_load_balancer_load_balancer.{{ resource_name }}.id
    {{ resource_name }}_ip_address    = oci_load_balancer_load_balancer.{{ resource_name }}.ip_address_details[0]["ip_address"]
    {{ resource_name }}_url           = format("http://%s", oci_load_balancer_load_balancer.{{ resource_name }}.ip_address_details[0]["ip_address"])
}

output "{{ output_name }}IPAddress" {
    value = local.{{ resource_name }}_ip_address
}

output "{{ output_name }}URL" {
    value = format("http://%s", local.{{ resource_name }}_ip_address)
}

locals {
    {{ resource_name }}_backend_set_name = "{{ resource_name }}BackendSet"
    {{ resource_name }}_listener_name    = "{{ resource_name }}Listener"
}

# ------ Create Loadbalancer Backend Set
resource "oci_load_balancer_backend_set" "{{ resource_name }}BackendSet" {
    # Required
    health_checker {
        # Required
        protocol            = {{ protocol | safe }}
        # Optional
        interval_ms         = {{ health_check_interval | default(1000) }}
        port                = {{ port | safe }}
#        response_body_regex = {{ health_check_response_regex }}
#        retries             = {{ health_check_retries | default(100) }}
#        return_code         = {{ health_check_return_code | default(200) }}
#        timeout_in_millis   = {{ health_check_timeout | default(3000) }}
        url_path            = {{ url_path | safe }}
    }
    load_balancer_id = local.{{ resource_name }}_id
    name             = substr(local.{{ resource_name }}_backend_set_name, 0, 32)
    policy           = {{ backend_policy | safe }}
{% if persistence_cookie_name is defined %}
    # Optional
    session_persistence_configuration {
        #Required
        cookie_name      = {{ persistence_cookie_name | safe }}
        # Optional
        disable_fallback = {{ disable_fallback | safe }}
    }
{% endif %}
{% if ssl_certificate_name is defined %}
    ssl_configuration {
        #Required
        certificate_name        = {{ ssl_certificate_name | safe }}
        # Optional
        verify_depth            = {{ ssl_verify_depth | safe }}
        verify_peer_certificate = {{ ssl_verify_peer_certificate | safe }}
    }
{% endif %}
}

locals {
    {{ resource_name }}BackendSet_id   = oci_load_balancer_backend_set.{{ resource_name }}BackendSet.id
    {{ resource_name }}BackendSet_name = oci_load_balancer_backend_set.{{ resource_name }}BackendSet.name
}

# ------ Create Loadbalancer Backend
{% for backend_instance in backend_instances %}
resource "oci_load_balancer_backend" "{{ resource_name }}Backend{{ loop.index }}" {
    # Required
    backendset_name  = local.{{ resource_name }}BackendSet_name
    ip_address       = local.{{ backend_instance }}_private_ip
    load_balancer_id = local.{{ resource_name }}_id
    port             = {{ port | safe }}
    # Optional
#    backup           = {{ backup }}
#    drain            = {{ drain }}
#    offline          = {{ offline }}
#    weight           = {{ weight }}
}
{% endfor %}

# ------ Create Loadbalancer Listener
resource "oci_load_balancer_listener" "{{ resource_name }}Listener" {
    # Required
    default_backend_set_name = local.{{ resource_name }}BackendSet_name
    load_balancer_id         = local.{{ resource_name }}_id
    name                     = substr(local.{{ resource_name }}_listener_name, 0, 32)
    port                     = {{ port | safe }}
    protocol                 = {{ protocol | safe }}
    # Optional
    connection_configuration {
        # Required
        idle_timeout_in_seconds = {{ idle_timeout | default(1200) }}
    }
#    hostname_names           = [{{ hostnames | safe }}]
#    path_route_set_name      = {{ path_route_set_name | safe }}
#    rule_set_names           = [{{ rule_set_names | safe }}]
#    ssl_configuration {
#        # Required
#        certificate_name        = {{ ssl_certificate_name | safe }}
#        # Optional
#        verify_depth            = {{ ssl_verify_depth | safe }}
#        verify_peer_certificate = {{ ssl_verify_peer_certificate | safe }}
#    }
}

locals {
    {{ resource_name }}Listener_id            = oci_load_balancer_listener.{{ resource_name }}Listener.id
}
